File=Table 
Product=larlite 
 
Group:

Flavor     = ANY
Qualifiers = "e10:prof"

  Action = GetProducts
    setupRequired( root v6_06_08 -q +e10:+nu:+prof )

Flavor     = ANY
Qualifiers = "e10:debug"

  Action = GetProducts
    setupRequired( root v6_06_08 -q +e10:+nu:+debug )

Flavor     = ANY
Qualifiers = "e10:opt"

  Action = GetProducts
    setupRequired( root v6_06_08 -q +e10:+nu:+opt )


Common:
  Action = setup
    prodDir()
    setupEnv()
    envSet(${UPS_PROD_NAME_UC}_VERSION, v06_09_00)

    # Set up required products, which is root
    exeActionRequired(GetProducts)

    envSet(LARLITE_BASEDIR,${UPS_PROD_DIR}/${UPS_PROD_FLAVOR})
    envSet(LARLITE_ROOT6,1)
    envSet(LARLITE_COREDIR,${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}/core)
    envSet(LARLITE_LIBDIR,${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}/lib)
    envSet(LARLITE_USERDEVDIR,${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}/UserDev)
    

    if ( test `uname` = "Darwin" )
      envSet(LARLITE_CXX,clang++)
      pathPrepend(DYLD_LIBRARY_PATH, ${LARLITE_LIBDIR})
    else()
      envSet(LARLITE_CXX,g++)
      pathPrepend(LD_LIBRARY_PATH, ${LARLITE_LIBDIR})
    endif ( test `uname` = "Darwin" )

    # add the bin directory to the path
    pathPrepend(PATH, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}/bin )
    # add the python area to the pythonpath
    pathPrepend(PYTHONPATH, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}/python )



End:
# End Group definition
#*************************************************
#
# ups declare command that works on gpvm:
# ups declare larlite v06_09_00 -r larlite/v06_09_00 -f Linux64bit+2.6-2.12 -m larlite.table -q e10:prof -U ups/
#
#
